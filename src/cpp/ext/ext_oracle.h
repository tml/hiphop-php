/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010 Facebook, Inc. (http://www.facebook.com)          |
   | Copyright (c) 1997-2010 The PHP Group                                |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef __EXT_ORACLE_H__
#define __EXT_ORACLE_H__

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include <cpp/base/base_includes.h>

namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

Object f_oci_connect(CStrRef username, CStrRef password, CStrRef db = null_string, CStrRef charset = null_string, int session_mode = 0);
Object f_oci_new_connect(CStrRef username, CStrRef password, CStrRef db = null_string, CStrRef charset = null_string, int session_mode = 0);
Object f_oci_pconnect(CStrRef username, CStrRef password, CStrRef db = null_string, CStrRef charset = null_string, int session_mode = 0);
String f_oci_server_version(CObjRef connection);
Variant f_oci_password_change(CVarRef connection, CStrRef username, CStrRef old_password, CStrRef new_password);
Object f_oci_new_cursor(CObjRef connection);
Object f_oci_new_descriptor(CObjRef connection, int type = 0);
bool f_oci_close(CObjRef connection);
bool f_oci_commit(CObjRef connection);
bool f_oci_rollback(CObjRef connection);
Array f_oci_error(CObjRef source = null);
void f_oci_internal_debug(bool onoff);
Object f_oci_parse(CObjRef connection, CStrRef query);
String f_oci_statement_type(CObjRef statement);
bool f_oci_free_statement(CObjRef statement);
bool f_oci_free_descriptor(CObjRef lob);
bool f_oci_bind_array_by_name(CObjRef statement, CStrRef name, Variant var_array, int max_table_length, int max_item_length = 0, int type = 0);
bool f_oci_bind_by_name(CObjRef statement, CStrRef ph_name, Variant variable, int max_length = 0, int type = 0);
bool f_oci_cancel(CObjRef statement);
bool f_oci_define_by_name(CObjRef statement, CStrRef column_name, Variant variable, int type = 0);
bool f_oci_execute(CObjRef statement, int mode = 0);
int f_oci_num_fields(CObjRef statement);
int f_oci_num_rows(CObjRef statement);
Variant f_oci_result(CObjRef statement, CVarRef field);
bool f_oci_set_prefetch(CObjRef statement, int rows);
int f_oci_fetch_all(CObjRef statement, Variant output, int skip = 0, int maxrows = 0, int flags = 0);
Variant f_oci_fetch_array(CObjRef statement, int mode = 0);
Variant f_oci_fetch_assoc(CObjRef statement);
Variant f_oci_fetch_object(CObjRef statement);
Variant f_oci_fetch_row(CObjRef statement);
bool f_oci_fetch(CObjRef statement);
bool f_oci_field_is_null(CObjRef statement, CVarRef field);
String f_oci_field_name(CObjRef statement, int field);
int f_oci_field_precision(CObjRef statement, int field);
int f_oci_field_scale(CObjRef statement, int field);
int f_oci_field_size(CObjRef statement, CVarRef field);
int f_oci_field_type_raw(CObjRef statement, int field);
Variant f_oci_field_type(CObjRef statement, int field);

///////////////////////////////////////////////////////////////////////////////
}

#endif // __EXT_ORACLE_H__
