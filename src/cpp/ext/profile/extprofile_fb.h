/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010 Facebook, Inc. (http://www.facebook.com)          |
   | Copyright (c) 1997-2010 The PHP Group                                |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef __EXTPROFILE_FB_H__
#define __EXTPROFILE_FB_H__

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include <cpp/ext/ext_fb.h>

namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

#ifndef PROFILE_BUILTIN
#define x_fb_thrift_serialize f_fb_thrift_serialize
#else
inline Variant x_fb_thrift_serialize(CVarRef thing) {
  FUNCTION_INJECTION(fb_thrift_serialize);
  return f_fb_thrift_serialize(thing);
}
#endif

#ifndef PROFILE_BUILTIN
#define x_fb_thrift_unserialize f_fb_thrift_unserialize
#else
inline Variant x_fb_thrift_unserialize(CVarRef thing, Variant success, Variant errcode = null_variant) {
  FUNCTION_INJECTION(fb_thrift_unserialize);
  return f_fb_thrift_unserialize(thing, ref(success), ref(errcode));
}
#endif

#ifndef PROFILE_BUILTIN
#define x_fb_rename_function f_fb_rename_function
#else
inline bool x_fb_rename_function(CStrRef orig_func_name, CStrRef new_func_name) {
  FUNCTION_INJECTION(fb_rename_function);
  return f_fb_rename_function(orig_func_name, new_func_name);
}
#endif

#ifndef PROFILE_BUILTIN
#define x_fb_utf8ize f_fb_utf8ize
#else
inline bool x_fb_utf8ize(Variant input) {
  FUNCTION_INJECTION(fb_utf8ize);
  return f_fb_utf8ize(ref(input));
}
#endif

#ifndef PROFILE_BUILTIN
#define x_fb_call_user_func_safe f_fb_call_user_func_safe
#else
inline Array x_fb_call_user_func_safe(int _argc, CVarRef function, CArrRef _argv = null_array) {
  FUNCTION_INJECTION(fb_call_user_func_safe);
  return f_fb_call_user_func_safe(_argc, function, _argv);
}
#endif

#ifndef PROFILE_BUILTIN
#define x_fb_call_user_func_safe_return f_fb_call_user_func_safe_return
#else
inline Variant x_fb_call_user_func_safe_return(int _argc, CVarRef function, CVarRef def, CArrRef _argv = null_array) {
  FUNCTION_INJECTION(fb_call_user_func_safe_return);
  return f_fb_call_user_func_safe_return(_argc, function, def, _argv);
}
#endif

#ifndef PROFILE_BUILTIN
#define x_fb_call_user_func_array_safe f_fb_call_user_func_array_safe
#else
inline Array x_fb_call_user_func_array_safe(CVarRef function, CArrRef params) {
  FUNCTION_INJECTION(fb_call_user_func_array_safe);
  return f_fb_call_user_func_array_safe(function, params);
}
#endif

#ifndef PROFILE_BUILTIN
#define x_xhprof_enable f_xhprof_enable
#else
inline void x_xhprof_enable(int flags, CArrRef args = null_array) {
  FUNCTION_INJECTION(xhprof_enable);
  f_xhprof_enable(flags, args);
}
#endif

#ifndef PROFILE_BUILTIN
#define x_xhprof_disable f_xhprof_disable
#else
inline Variant x_xhprof_disable() {
  FUNCTION_INJECTION(xhprof_disable);
  return f_xhprof_disable();
}
#endif

#ifndef PROFILE_BUILTIN
#define x_xhprof_sample_enable f_xhprof_sample_enable
#else
inline void x_xhprof_sample_enable() {
  FUNCTION_INJECTION(xhprof_sample_enable);
  f_xhprof_sample_enable();
}
#endif

#ifndef PROFILE_BUILTIN
#define x_xhprof_sample_disable f_xhprof_sample_disable
#else
inline Variant x_xhprof_sample_disable() {
  FUNCTION_INJECTION(xhprof_sample_disable);
  return f_xhprof_sample_disable();
}
#endif

#ifndef PROFILE_BUILTIN
#define x_fb_load_local_databases f_fb_load_local_databases
#else
inline void x_fb_load_local_databases(CArrRef servers) {
  FUNCTION_INJECTION(fb_load_local_databases);
  f_fb_load_local_databases(servers);
}
#endif

#ifndef PROFILE_BUILTIN
#define x_fb_parallel_query f_fb_parallel_query
#else
inline Array x_fb_parallel_query(CArrRef sql_map, int max_thread = 50, bool combine_result = true, bool retry_query_on_fail = true, int connect_timeout = -1, int read_timeout = -1, bool timeout_in_ms = false) {
  FUNCTION_INJECTION(fb_parallel_query);
  return f_fb_parallel_query(sql_map, max_thread, combine_result, retry_query_on_fail, connect_timeout, read_timeout, timeout_in_ms);
}
#endif

#ifndef PROFILE_BUILTIN
#define x_fb_crossall_query f_fb_crossall_query
#else
inline Array x_fb_crossall_query(CStrRef sql, int max_thread = 50, bool retry_query_on_fail = true, int connect_timeout = -1, int read_timeout = -1, bool timeout_in_ms = false) {
  FUNCTION_INJECTION(fb_crossall_query);
  return f_fb_crossall_query(sql, max_thread, retry_query_on_fail, connect_timeout, read_timeout, timeout_in_ms);
}
#endif


///////////////////////////////////////////////////////////////////////////////
}

#endif // __EXTPROFILE_FB_H__
