/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010 Facebook, Inc. (http://www.facebook.com)          |
   | Copyright (c) 1997-2010 The PHP Group                                |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef __EXTPROFILE_LDAP_H__
#define __EXTPROFILE_LDAP_H__

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include <cpp/ext/ext_ldap.h>

namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

inline Object x_ldap_connect(CStrRef hostname = null_string, int port = 389) {
  FUNCTION_INJECTION_BUILTIN(ldap_connect);
  return f_ldap_connect(hostname, port);
}

inline Array x_ldap_explode_dn(CStrRef dn, int with_attrib) {
  FUNCTION_INJECTION_BUILTIN(ldap_explode_dn);
  return f_ldap_explode_dn(dn, with_attrib);
}

inline String x_ldap_dn2ufn(CStrRef db) {
  FUNCTION_INJECTION_BUILTIN(ldap_dn2ufn);
  return f_ldap_dn2ufn(db);
}

inline String x_ldap_err2str(int errnum) {
  FUNCTION_INJECTION_BUILTIN(ldap_err2str);
  return f_ldap_err2str(errnum);
}

inline String x_ldap_8859_to_t61(CStrRef value) {
  FUNCTION_INJECTION_BUILTIN(ldap_8859_to_t61);
  return f_ldap_8859_to_t61(value);
}

inline String x_ldap_t61_to_8859(CStrRef value) {
  FUNCTION_INJECTION_BUILTIN(ldap_t61_to_8859);
  return f_ldap_t61_to_8859(value);
}

inline bool x_ldap_add(CObjRef link_identifier, CStrRef dn, CArrRef entry) {
  FUNCTION_INJECTION_BUILTIN(ldap_add);
  return f_ldap_add(link_identifier, dn, entry);
}

inline bool x_ldap_mod_add(CObjRef link_identifier, CStrRef dn, CArrRef entry) {
  FUNCTION_INJECTION_BUILTIN(ldap_mod_add);
  return f_ldap_mod_add(link_identifier, dn, entry);
}

inline bool x_ldap_mod_del(CObjRef link_identifier, CStrRef dn, CArrRef entry) {
  FUNCTION_INJECTION_BUILTIN(ldap_mod_del);
  return f_ldap_mod_del(link_identifier, dn, entry);
}

inline bool x_ldap_mod_replace(CObjRef link_identifier, CStrRef dn, CArrRef entry) {
  FUNCTION_INJECTION_BUILTIN(ldap_mod_replace);
  return f_ldap_mod_replace(link_identifier, dn, entry);
}

inline bool x_ldap_modify(CObjRef link_identifier, CStrRef dn, CArrRef entry) {
  FUNCTION_INJECTION_BUILTIN(ldap_modify);
  return f_ldap_modify(link_identifier, dn, entry);
}

inline bool x_ldap_bind(CObjRef link_identifier, CStrRef bind_rdn = null_string, CStrRef bind_password = null_string) {
  FUNCTION_INJECTION_BUILTIN(ldap_bind);
  return f_ldap_bind(link_identifier, bind_rdn, bind_password);
}

inline bool x_ldap_sasl_bind(CObjRef link, CStrRef binddn = null_string, CStrRef password = null_string, CStrRef sasl_mech = null_string, CStrRef sasl_realm = null_string, CStrRef sasl_authz_id = null_string, CStrRef props = null_string) {
  FUNCTION_INJECTION_BUILTIN(ldap_sasl_bind);
  return f_ldap_sasl_bind(link, binddn, password, sasl_mech, sasl_realm, sasl_authz_id, props);
}

inline bool x_ldap_set_rebind_proc(CObjRef link, CStrRef callback) {
  FUNCTION_INJECTION_BUILTIN(ldap_set_rebind_proc);
  return f_ldap_set_rebind_proc(link, callback);
}

inline bool x_ldap_sort(CObjRef link, CObjRef result, CStrRef sortfilter) {
  FUNCTION_INJECTION_BUILTIN(ldap_sort);
  return f_ldap_sort(link, result, sortfilter);
}

inline bool x_ldap_start_tls(CObjRef link) {
  FUNCTION_INJECTION_BUILTIN(ldap_start_tls);
  return f_ldap_start_tls(link);
}

inline bool x_ldap_unbind(CObjRef link_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_unbind);
  return f_ldap_unbind(link_identifier);
}

inline bool x_ldap_get_option(CObjRef link_identifier, int option, Variant retval) {
  FUNCTION_INJECTION_BUILTIN(ldap_get_option);
  return f_ldap_get_option(link_identifier, option, ref(retval));
}

inline bool x_ldap_set_option(CObjRef link_identifier, int option, CVarRef newval) {
  FUNCTION_INJECTION_BUILTIN(ldap_set_option);
  return f_ldap_set_option(link_identifier, option, newval);
}

inline bool x_ldap_close(CObjRef link_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_close);
  return f_ldap_close(link_identifier);
}

inline Object x_ldap_list(CObjRef link_identifier, CStrRef base_dn, CStrRef filter, CArrRef attributes = null, int attrsonly = 0, int sizelimit = 0, int timelimit = 0, int deref = 0) {
  FUNCTION_INJECTION_BUILTIN(ldap_list);
  return f_ldap_list(link_identifier, base_dn, filter, attributes, attrsonly, sizelimit, timelimit, deref);
}

inline Object x_ldap_read(CObjRef link_identifier, CStrRef base_dn, CStrRef filter, CArrRef attributes = null, int attrsonly = 0, int sizelimit = 0, int timelimit = 0, int deref = 0) {
  FUNCTION_INJECTION_BUILTIN(ldap_read);
  return f_ldap_read(link_identifier, base_dn, filter, attributes, attrsonly, sizelimit, timelimit, deref);
}

inline Object x_ldap_search(CObjRef link_identifier, CStrRef base_dn, CStrRef filter, CArrRef attributes = null, int attrsonly = 0, int sizelimit = 0, int timelimit = 0, int deref = 0) {
  FUNCTION_INJECTION_BUILTIN(ldap_search);
  return f_ldap_search(link_identifier, base_dn, filter, attributes, attrsonly, sizelimit, timelimit, deref);
}

inline bool x_ldap_rename(CObjRef link_identifier, CStrRef dn, CStrRef newrdn, CStrRef newparent, bool deleteoldrdn) {
  FUNCTION_INJECTION_BUILTIN(ldap_rename);
  return f_ldap_rename(link_identifier, dn, newrdn, newparent, deleteoldrdn);
}

inline bool x_ldap_delete(CObjRef link_identifier, CStrRef dn) {
  FUNCTION_INJECTION_BUILTIN(ldap_delete);
  return f_ldap_delete(link_identifier, dn);
}

inline Variant x_ldap_compare(CObjRef link_identifier, CStrRef dn, CStrRef attribute, CStrRef value) {
  FUNCTION_INJECTION_BUILTIN(ldap_compare);
  return f_ldap_compare(link_identifier, dn, attribute, value);
}

inline int x_ldap_errno(CObjRef link_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_errno);
  return f_ldap_errno(link_identifier);
}

inline String x_ldap_error(CObjRef link_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_error);
  return f_ldap_error(link_identifier);
}

inline String x_ldap_get_dn(CObjRef link_identifier, CObjRef result_entry_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_get_dn);
  return f_ldap_get_dn(link_identifier, result_entry_identifier);
}

inline int x_ldap_count_entries(CObjRef link_identifier, CObjRef result_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_count_entries);
  return f_ldap_count_entries(link_identifier, result_identifier);
}

inline Array x_ldap_get_entries(CObjRef link_identifier, CObjRef result_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_get_entries);
  return f_ldap_get_entries(link_identifier, result_identifier);
}

inline Object x_ldap_first_entry(CObjRef link_identifier, CObjRef result_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_first_entry);
  return f_ldap_first_entry(link_identifier, result_identifier);
}

inline Object x_ldap_next_entry(CObjRef link_identifier, CObjRef result_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_next_entry);
  return f_ldap_next_entry(link_identifier, result_identifier);
}

inline Array x_ldap_get_attributes(CObjRef link_identifier, CObjRef result_entry_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_get_attributes);
  return f_ldap_get_attributes(link_identifier, result_entry_identifier);
}

inline String x_ldap_first_attribute(CObjRef link_identifier, CObjRef result_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_first_attribute);
  return f_ldap_first_attribute(link_identifier, result_identifier);
}

inline String x_ldap_next_attribute(CObjRef link_identifier, CObjRef result_entry_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_next_attribute);
  return f_ldap_next_attribute(link_identifier, result_entry_identifier);
}

inline Object x_ldap_first_reference(CObjRef link_identifier, CObjRef result_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_first_reference);
  return f_ldap_first_reference(link_identifier, result_identifier);
}

inline Object x_ldap_next_reference(CObjRef link_identifier, CObjRef result_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_next_reference);
  return f_ldap_next_reference(link_identifier, result_identifier);
}

inline bool x_ldap_parse_reference(CObjRef link_identifier, CObjRef result_identifier, Variant referrals) {
  FUNCTION_INJECTION_BUILTIN(ldap_parse_reference);
  return f_ldap_parse_reference(link_identifier, result_identifier, ref(referrals));
}

inline bool x_ldap_parse_result(CObjRef link_identifier, CObjRef result_entry_identifier, Variant errcode, Variant matcheddn = null, Variant errmsg = null, Variant referrals = null) {
  FUNCTION_INJECTION_BUILTIN(ldap_parse_result);
  return f_ldap_parse_result(link_identifier, result_entry_identifier, ref(errcode), ref(matcheddn), ref(errmsg), ref(referrals));
}

inline bool x_ldap_free_result(CObjRef result_identifier) {
  FUNCTION_INJECTION_BUILTIN(ldap_free_result);
  return f_ldap_free_result(result_identifier);
}

inline Array x_ldap_get_values_len(CObjRef link_identifier, CObjRef result_entry_identifier, CStrRef attribute) {
  FUNCTION_INJECTION_BUILTIN(ldap_get_values_len);
  return f_ldap_get_values_len(link_identifier, result_entry_identifier, attribute);
}

inline Array x_ldap_get_values(CObjRef link_identifier, CObjRef result_entry_identifier, CStrRef attribute) {
  FUNCTION_INJECTION_BUILTIN(ldap_get_values);
  return f_ldap_get_values(link_identifier, result_entry_identifier, attribute);
}


///////////////////////////////////////////////////////////////////////////////
}

#endif // __EXTPROFILE_LDAP_H__
