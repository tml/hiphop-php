/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010 Facebook, Inc. (http://www.facebook.com)          |
   | Copyright (c) 1997-2010 The PHP Group                                |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef __EXT_LDAP_H__
#define __EXT_LDAP_H__

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include <cpp/base/base_includes.h>

namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

Object f_ldap_connect(CStrRef hostname = null_string, int port = 389);
Array f_ldap_explode_dn(CStrRef dn, int with_attrib);
String f_ldap_dn2ufn(CStrRef db);
String f_ldap_err2str(int errnum);
String f_ldap_8859_to_t61(CStrRef value);
String f_ldap_t61_to_8859(CStrRef value);
bool f_ldap_add(CObjRef link_identifier, CStrRef dn, CArrRef entry);
bool f_ldap_mod_add(CObjRef link_identifier, CStrRef dn, CArrRef entry);
bool f_ldap_mod_del(CObjRef link_identifier, CStrRef dn, CArrRef entry);
bool f_ldap_mod_replace(CObjRef link_identifier, CStrRef dn, CArrRef entry);
bool f_ldap_modify(CObjRef link_identifier, CStrRef dn, CArrRef entry);
bool f_ldap_bind(CObjRef link_identifier, CStrRef bind_rdn = null_string, CStrRef bind_password = null_string);
bool f_ldap_sasl_bind(CObjRef link, CStrRef binddn = null_string, CStrRef password = null_string, CStrRef sasl_mech = null_string, CStrRef sasl_realm = null_string, CStrRef sasl_authz_id = null_string, CStrRef props = null_string);
bool f_ldap_set_rebind_proc(CObjRef link, CStrRef callback);
bool f_ldap_sort(CObjRef link, CObjRef result, CStrRef sortfilter);
bool f_ldap_start_tls(CObjRef link);
bool f_ldap_unbind(CObjRef link_identifier);
bool f_ldap_get_option(CObjRef link_identifier, int option, Variant retval);
bool f_ldap_set_option(CObjRef link_identifier, int option, CVarRef newval);
bool f_ldap_close(CObjRef link_identifier);
Object f_ldap_list(CObjRef link_identifier, CStrRef base_dn, CStrRef filter, CArrRef attributes = null, int attrsonly = 0, int sizelimit = 0, int timelimit = 0, int deref = 0);
Object f_ldap_read(CObjRef link_identifier, CStrRef base_dn, CStrRef filter, CArrRef attributes = null, int attrsonly = 0, int sizelimit = 0, int timelimit = 0, int deref = 0);
Object f_ldap_search(CObjRef link_identifier, CStrRef base_dn, CStrRef filter, CArrRef attributes = null, int attrsonly = 0, int sizelimit = 0, int timelimit = 0, int deref = 0);
bool f_ldap_rename(CObjRef link_identifier, CStrRef dn, CStrRef newrdn, CStrRef newparent, bool deleteoldrdn);
bool f_ldap_delete(CObjRef link_identifier, CStrRef dn);
Variant f_ldap_compare(CObjRef link_identifier, CStrRef dn, CStrRef attribute, CStrRef value);
int f_ldap_errno(CObjRef link_identifier);
String f_ldap_error(CObjRef link_identifier);
String f_ldap_get_dn(CObjRef link_identifier, CObjRef result_entry_identifier);
int f_ldap_count_entries(CObjRef link_identifier, CObjRef result_identifier);
Array f_ldap_get_entries(CObjRef link_identifier, CObjRef result_identifier);
Object f_ldap_first_entry(CObjRef link_identifier, CObjRef result_identifier);
Object f_ldap_next_entry(CObjRef link_identifier, CObjRef result_identifier);
Array f_ldap_get_attributes(CObjRef link_identifier, CObjRef result_entry_identifier);
String f_ldap_first_attribute(CObjRef link_identifier, CObjRef result_identifier);
String f_ldap_next_attribute(CObjRef link_identifier, CObjRef result_entry_identifier);
Object f_ldap_first_reference(CObjRef link_identifier, CObjRef result_identifier);
Object f_ldap_next_reference(CObjRef link_identifier, CObjRef result_identifier);
bool f_ldap_parse_reference(CObjRef link_identifier, CObjRef result_identifier, Variant referrals);
bool f_ldap_parse_result(CObjRef link_identifier, CObjRef result_entry_identifier, Variant errcode, Variant matcheddn = null, Variant errmsg = null, Variant referrals = null);
bool f_ldap_free_result(CObjRef result_identifier);
Array f_ldap_get_values_len(CObjRef link_identifier, CObjRef result_entry_identifier, CStrRef attribute);
Array f_ldap_get_values(CObjRef link_identifier, CObjRef result_entry_identifier, CStrRef attribute);

///////////////////////////////////////////////////////////////////////////////
}

#endif // __EXT_LDAP_H__
